{
    "contents" : "library(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(RColorBrewer)\n\nload(\"./Data/usMap.rda\")\n\nshinyServer(\n  function(input, output) {\n    updateRates = reactive({\n      subset = select_(dat, \n                      .dots = c(input$rate.var, \"Leading.Cancer.Sites\", \"Sex\", \"State\", \"Race\"))\n      subset = filter(subset, \n                      Leading.Cancer.Sites == input$cancer.var & \n                        Sex == input$sex.var &\n                        Race == input$race.var)\n      \n      rates = subset[,1][match(usMap$STATE_NAME, subset$State)]\n      return(rates)\n    })\n    \n    getCol = reactive({\n      if(input$race.var == \"Asian or Pacific Islander\"){\n        return(\"Greens\")\n      } else if(input$race.var == \"Black or African American\"){\n        return(\"Reds\")\n      } else {\n        return(\"Blues\")\n      }\n    })\n    \n    output$map = renderPlot({\n      usMap$rates = updateRates()\n      this.col = getCol()\n      \n      p = ggplot(data = usMap, aes(x = x_proj, y = y_proj, group = DRAWSEQ, fill = rates)) + \n        geom_polygon(color = \"black\",  color = \"gray40\", size = 0.6) + \n        scale_fill_gradientn(colours=brewer.pal(7, this.col)) +\n        theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +\n        labs(title = \"Title\", fill=NULL)\n      \n      print(p)\n    })\n    \n  }\n)\n",
    "created" : 1429886713343.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2211074661",
    "id" : "405604F8",
    "lastKnownWriteTime" : 1429902496,
    "path" : "~/Health_Demo/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}