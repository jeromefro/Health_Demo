install.packages("reshape2")
install.packages("tidyr")
install.packages("shiny")
install.packages("googleVis")
install.packages("data.table")
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
object.size(dat)
object.size(dat, units = "Mb")
object.size(dat, units = "MB")
object.size(dat, units = "b")
?object.size
object.size(dat)
format(object.size(dat), units = "Mb")
format(object.size(dat), units = "Kb")
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
if (NULL) 1+1
exists(NULL)
is.null(NULL)
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
format(object.size(NULL), units = "Kb")
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
nrows(dat)
paste("Size of Dataset: ", format(object.size(dat), units = "Kb"),
"/n", "Number of Observations: ", dim(dat)[1], "/n",
"Number of Features: ", dim(dat)[2])
paste("Size of Dataset: ", format(object.size(dat), units = "Kb"),
"\n", "Number of Observations: ", dim(dat)[1], "\n",
"Number of Features: ", dim(dat)[2])
cat("a", "b")
data(iris)
?write.csv
write.csv(iris, "~/Documents/irisTest.csv")
shiny::runApp('Documents/Work/Projects/Health_Demo')
?read.csv
rm(iris)
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
shiny::runApp('Documents/Work/Projects/Health_Demo')
test <- read.csv("~/Documents/irisTest.csv")
head(test)
shiny::runApp('Documents/Work/Projects/Health_Demo')
summary(iris)
shiny::runApp('Documents/Work/Projects/Health_Demo')
df <- read.csv("./CHSI/DEMOGRAPHICS.csv")
df <- read.table("./CHSI/CHSI DataSet.xls")
setwd("~/Documents/Work/Projects/Health_Demo/Data")
df <- read.table("Data/BYAREA.TXT")
test <- read.csv("~/Documents/CHSI_Demographics.csv")
head(dat)
rm(dat)
head(test)
rm(test)
df <- read.table("CHSI/CHSI_Deaths.csv")
setwd("~/Documents/Work/Projects/Health_Demo")
df <- read.table("./CHSI/CHSI_Deaths.csv")
df <- read.csv("./CHSI/CHSI_Deaths.csv")
head(df)
str(df)
summary(df$Brst_Cancer)
df <- read.csv("./CHSI/CHSI_Deaths2.csv")
head(df)
"Cancer" %in% names(df)
?grep
grepl("Cancer", names(df))
names(df)
cancerCols <- grepl("Cancer", names(df))
names(df)[1:5]
head(df[,1:5])
cancerCols[3:4] <- TRUE
df <- df[, cancerCols]
names(cancerCols)
names(df)
mins <- grepl("Min", names(df))
maxs <- grepl("Max", names(df))
keep <- !mins & !maxs
df <- df[, keep]
names(df)
ages <- c("1-14", "15-24", "25-44", "45-64", "65+")
letters <- c("B", "C", "D", "E", "F")
ages <- c("1-14_", "15-24_", "25-44_", "45-64_", "65+_")
letters <- c("B_", "C_", "D_", "E_", "F_")
test <- gsub(letters[1], ages[1], names(df))
test
for (i in 1:5) {
names(df) <- gsub(letters[i], ages[i], names(df))
}
names(df)
races <- c("Black_", "White_", "Hispanic_", "Other_")
abb <- c("Bl_", "Wh_", "Hi_", "Ot_")
for (i in 1:5) {
names(df) <- gsub(abb[i], races[i], names(df))
}
names(df)
df <- read.csv("./CHSI/CHSI_Deaths2.csv")
head(df)
str(df)
library(dplyr)
summary(df$Brst_Cancer)
cancerCols <- grepl("Cancer", names(df))
names(df)[1:5]
head(df[,1:5])
cancerCols[3:4] <- TRUE
df <- df[, cancerCols]
names(df)
mins <- grepl("Min", names(df))
maxs <- grepl("Max", names(df))
keep <- !mins & !maxs
df <- df[, keep]
names(df)
ages <- c("1-14_", "15-24_", "25-44_", "45-64_", "65+_")
letters <- c("B_", "C_", "D_", "E_", "F_")
for (i in 1:5) {
names(df) <- gsub(letters[i], ages[i], names(df))
}
names(df)
temp <- names(df)
for (i in 1:4) {
names(df) <- gsub(abb[i], races[i], names(df))
}
names(df)
str(df)
summary(df)
df <- read.csv("./chsi_dataset/LEADINGCAUSESOFDEATH.csv")
head(df)
str(df)
library(dplyr)
cancerCols <- grepl("Cancer", names(df))
names(df)[1:5]
head(df[,1:5])
cancerCols[3:4] <- TRUE
df <- df[, cancerCols]
names(df)
mins <- grepl("Min", names(df))
maxs <- grepl("Max", names(df))
keep <- !mins & !maxs
df <- df[, keep]
names(df)
ages <- c("1-14_", "15-24_", "25-44_", "45-64_", "65+_")
letters <- c("B_", "C_", "D_", "E_", "F_")
for (i in 1:5) {
names(df) <- gsub(letters[i], ages[i], names(df))
}
names(df)
races <- c("Black_", "White_", "Hispanic_", "Other_")
abb <- c("Bl_", "Wh_", "Hi_", "Ot_")
temp <- names(df)
for (i in 1:4) {
names(df) <- gsub(abb[i], races[i], names(df))
}
names(df)
summary(df)
mean(df[,3] == -1111)
df <- read.csv("./chsi_dataset/MEASURESOFBIRTHANDDEATH.csv")
head(df)
str(df)
cancerCols <- grepl("Cancer", names(df))
names(df)[1:5]
names(df)[1:6]
names(df)[1:8]
head(df[,1:8])
cancerCols[1:6] <- TRUE
df <- df[, cancerCols]
names(df)
mins <- grepl("Min", names(df))
maxs <- grepl("Max", names(df))
inds <- grepl("Ind", names(df))
keep <- !mins & !maxs & ! inds
df <- df[, keep]
names(df)
str(df)
summary(df)
mean(df$Brst_Cancer <= 0)
mean(df$Col_Cancer <= 0)
mean(df$Lung_Cancer <= 0)
df$Brst_Cancer[df$Brst_Cancer < 0] <- NA
df$Col_Cancer[df$Col_Cancer < 0] <- NA
df$Lung_Cancer[df$Lung_Cancer < 0] <- NA
summary(df)
?sum
?rowSum
?rowSums
test <- rowSums(df[,7:9], na.rm=FALSE)
summary(test)
df$Total_Cancer <- rowSums(df[,7:9], na.rm=FALSE)
df.2 <- read.csv("./chsi_dataset/DEMOGRAPHICS.csv")
names(df.2)
keep <- c("State_FIPS_Code", "County_FIPS_Code", "CHSI_County_Name",
"CHSI_State_Name", "CHSI_State_Abbr", "Strata_ID_Number",
"Population_Size", "Population_Density", "Poverty", "Age_19_Under",
"Age_19_64", "Age_65_84", "Age_85_and_Over", "White", "Black",
"Asian", "Hispanic")
df <- df[,names(df) %in% keep]
names(df)
df <- read.csv("./chsi_dataset/MEASURESOFBIRTHANDDEATH.csv")
head(df)
str(df)
library(dplyr)
cancerCols <- grepl("Cancer", names(df))
names(df)[1:8]
head(df[,1:8])
cancerCols[1:6] <- TRUE
df <- df[, cancerCols]
names(df)
mins <- grepl("Min", names(df))
maxs <- grepl("Max", names(df))
inds <- grepl("Ind", names(df))
keep <- !mins & !maxs & ! inds
df <- df[, keep]
names(df)
summary(df)
mean(df$Brst_Cancer <= 0)
mean(df$Col_Cancer <= 0)
mean(df$Lung_Cancer <= 0)
df$Brst_Cancer[df$Brst_Cancer < 0] <- NA
df$Col_Cancer[df$Col_Cancer < 0] <- NA
df$Lung_Cancer[df$Lung_Cancer < 0] <- NA
summary(df)
df$Total_Cancer <- rowSums(df[,7:9], na.rm=FALSE)
df.2 <- df.2[,names(df.2) %in% keep]
names(df.2)
keep <- c("State_FIPS_Code", "County_FIPS_Code", "CHSI_County_Name",
"CHSI_State_Name", "CHSI_State_Abbr", "Strata_ID_Number",
"Population_Size", "Population_Density", "Poverty", "Age_19_Under",
"Age_19_64", "Age_65_84", "Age_85_and_Over", "White", "Black",
"Asian", "Hispanic")
df.2 <- read.csv("./chsi_dataset/DEMOGRAPHICS.csv")
names(df.2)
keep <- c("State_FIPS_Code", "County_FIPS_Code", "CHSI_County_Name",
"CHSI_State_Name", "CHSI_State_Abbr", "Strata_ID_Number",
"Population_Size", "Population_Density", "Poverty", "Age_19_Under",
"Age_19_64", "Age_65_84", "Age_85_and_Over", "White", "Black",
"Asian", "Hispanic")
names(df.2) %in% keep
df.2 <- df.2[,names(df.2) %in% keep]
names(df.2)
test = merge(df, df.2)
rm(test)
summary(df.2)
mean(df.2$Population_Density < 0)
mean(df.2$Population_Density <= 0)
mean(df.2$Poverty < 0)
mean(df.2$Poverty <= 0)
df.2$Population_Density[df.2$Population_Density <= 0)] <- NA
df.2$Population_Density[df.2$Population_Density <= 0] <- NA
df.2$Poverty[df.2$Poverty <= 0] <- NA
summary(df.2)
df.3 <- read.csv("./VULNERABLEPOPSANDENVHEALTH.csv")
df.3 <- read.csv("./VUNERABLEPOPSANDENVHEALTH.csv")
df.3 <- read.csv("./chsi_dataset/VUNERABLEPOPSANDENVHEALTH.csv")
names(df.3)
indsKeep <- grepl("Ind", names(df.3))
indsKeep[1:6] <- TRUE
df.3 <- df.3[,indsKeep]
names(df.3)
str(df.3)
summary(df.3)
df.3 <- read.csv("./chsi_dataset/RISKFACTORSANDACCESSTOCARE.csv")
str(df.3)
names(df.3)
keep <- c("State_FIPS_Code", "County_FIPS_Code", "CHSI_County_Name",
"CHSI_State_Name", "CHSI_State_Abbr", "Strata_ID_Number",
"No_Exercise", "Few_Fruit_Veg", "Obesity", "Smoker",
"Prim_Care_Phys_Rate")
df.3 <- df.3[, names(df.3) %in% keep]
names(df.3)
str(df.3)
summary(df.3)
df.3$No_Exercise[df.3$No_Exercise <= 0] <- NA
df.3$Obesity[df.3$Obesity <= 0] <- NA
df.3$Few_Fruit_Veg[df.3$Few_Fruit_Veg <= 0] <- NA
df.3$Smoker[df.3$Smoker <= 0] <- NA
summary(df.3)
chsi_Data <- merge(df, df.2)
chsi_Data <- merge(chsi_Data, df.3)
save(chsi_Data, file=".\Data\chsi_Data.rda")
save(chsi_Data, file="./Data/chsi_Data.rda")
summary(chsi_Data)
library(maps)
install.packages(maps)
install.packages("maps")
library(maps)
county_map <- map_data("county")
head(county_map)
summary(county_map$subregion)
str(county_map$subregion)
head(county_map$subregion, n = 20)
summary(chsi_Data)
str(chsi_Data)
install.packages("rgdal")
library(rgdal)
?readOGR
US.counties <- readOGR(dsn="~/Documents",layer="gz_2010_us_050_00_5m")
US.counties <- readOGR(dsn="~/Documents/gz_2010_us_050_00_5m",layer="gz_2010_us_050_00_5m")
setwd("~/Documents/gz_2010_us_050_00_5m")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
county.data <- US.counties@data
head(county.data)
head(chsi_Data)
summary(chsi_Data)
str(chsi_Data)
chsi_Data$State_FIPS_Code <- as.character(chsi_Data$State_FIPS_Code)
chsi_Data$County_FIPS_Code <- as.character(chsi_Data$County_FIPS_Code)
str(chsi_Data)
test <- paste(chsi_Data$State_FIPS_Code, chsi_Data$County_FIPS_Code)
test <- paste(chsi_Data$State_FIPS_Code, chsi_Data$County_FIPS_Code, sep="_")
chsi_Data$StateCounty_FIPS <- paste(chsi_Data$State_FIPS_Code, chsi_Data$County_FIPS_Code, sep = "_")
save(chsi_Data, file="./Data/chsi_Data.rda")
setwd("~/Documents/Work/Projects/Health_Demo")
save(chsi_Data, file="./Data/chsi_Data.rda")
head(county.Data)
head(county.data)
test <- as.character(county.data$STATE)
county.data$COUNTY
test <- numeric(county.data$STATE)
test <- as.numeric(county.data$STATE)
test <- as.character(county.data$STATE)
test <- as.numeric(county.data$STATE)
test <- as.character(test)
head(county.data)
str(county.data)
county.data$STATE <- as.character(as.numeric(as.character(county.data$STATE)))
county.data$COUNTY <- as.character(as.numeric(as.character(county.data$COUNTY)))
str(county.data)
county.data$StateCounty_FIPS <- paste(county.data$State_FIPS_Code, county.data$County_FIPS_Code, sep = "_")
str(county.data)
county.data$StateCounty_FIPS <- paste(county.data$STATE, county.data$COUNTY, sep = "_")
str(county.data)
map.df <- fortify(US.counties)
head(map.df)
head(rownames(county.data))
max(map.df$id)
max(rownames(county.data))
head(county_map)
p <- ggplot()
p <- p + geom_polygon( data=county_map, aes(x=long, y=lat, group = group),colour="white", fill="grey10" )
p
head(county_map, n= 100)
str(chsi_Data)
chsi_Data$CHSI_County_Name <- as.character(chsi_Data$CHSI_County_Name)
chsi_Data$CHSI_State_Name <- as.character(chsi_Data$CHSI_State_Name)
str(chsi_Data)
?tolower
chsi_Data$CHSI_County_Name <- tolower(chsi_Data$CHSI_County_Name)
chsi_Data$CHSI_State_Name <- tolower(chsi_Data$CHSI_State_Name)
str(chsi_Data)
chsi_Data$StateCounty_Name <- paste(chsi_Data$CHSI_County_Name, CHSI_State_Name, sep=",")
chsi_Data$StateCounty_Name <- paste(chsi_Data$CHSI_County_Name, chsi_Data$CHSI_State_Name, sep=",")
str(chsi_Data)
save(chsi_Data, file="./Data/chsi_Data.rda")
p <- ggplot()
p <- p + geom_polygon( data=county_map, aes(x=long, y=lat, group = group),colour="white", fill="grey10" )
p
head(county.data)
?match
head(county_map)
county_map$StateCounty_Name <- paste(county_map$subregion, county_map$region, sep = ",")
head(county_map)
head(chsi_Data$StateCounty_Name)
head(match(county_map$StateCounty_Name, chsi_Datat$StateCounty_Name))
head(match(county_map$StateCounty_Name, chsi_Data$StateCounty_Name))
head(chsi_Data)
head(chsi_Data[,7])
county_map$rate = chsi_Data[,7][match(county_map$StateCounty_Name, chsi_Data$StateCounty_Name)]
head(county_map)
p <- ggplot()
p <- p + geom_polygon( data=county_map, aes(x=long, y=lat, group = group, fill = rate),colour="white", fill="grey10" )
p
ggplot(data = county_map, aes(x = long, y = lat, group = group, fill = rate)) +
geom_polygon(color = "black",  color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(7,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
state_map <- map_data("state")
ggplot(data = county_map, aes(x = long, y = lat, group = group, fill = rate)) +
geom_polygon(color = "black",  color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(7,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = rate, color = "black",  color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(7,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
head(county_map)
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black",  color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(7,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black",  color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "blue",  color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black",  color = "blue", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.3) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "red")
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.3) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "black", size = 0.6)
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.3) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL) +
geom_path( data = state_map , colour = "black", size = 0.3)
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.3) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", color="grey10", size = 0.3) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
load("./Data/dat.rda")
subset = dat %>% filter(SITE == "Melanomas of the Skin" & SEX == "Male and Female" &
RACE == "All Races" & (YEAR >= 1999 & YEAR <= 2011) &
STATE != "United States") %>%
select(CRUDE_RATE, STATE)
load("./Data/usMap.rda")
usMap$rate = subset[,1][match(usMap$STATE_NAME, subset$STATE)]
ggplot(data = usMap, aes(x = x_proj, y = y_proj, group = DRAWSEQ, fill = rate)) +
geom_polygon(color = "black",  color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(7,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
ggplot(data = usMap, aes(x = x_proj, y = y_proj, group = DRAWSEQ, fill = rate)) +
geom_polygon(color = "black", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(7,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
ggplot(data = usMap, aes(x = x_proj, y = y_proj, group = DRAWSEQ, fill = rate)) +
geom_polygon(color = "gray40", size = 0.6) +
scale_fill_gradientn(colours=brewer.pal(7,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
shiny::runApp()
shiny::runApp()
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.3) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.1) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
head(chsi_Data)
names(chsi_Data)
county_map$rate = chsi_Data[,24][match(county_map$StateCounty_Name, chsi_Data$StateCounty_Name)]
ggplot(data = county_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = rate), color = "black", size = 0.1) +
scale_fill_gradientn(colours=brewer.pal(9,"YlOrRd")) +
theme(axis.line = element_blank(), panel.grid=element_blank(), rect = element_blank(), axis.title=element_blank(), axis.ticks=element_blank(), axis.text=element_blank()) +
labs(title = "Title", fill=NULL)
shiny::runApp()
shiny::runApp()
